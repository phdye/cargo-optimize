[package]
name = "cargo-optimize"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
description = "Automatically speed up Rust builds by 15-25% with zero configuration"
documentation = "https://docs.rs/cargo-optimize"
homepage = "https://github.com/yourusername/cargo-optimize"
repository = "https://github.com/yourusername/cargo-optimize"
readme = "README.md"
keywords = ["cargo", "build", "optimization", "performance", "linker"]
categories = ["development-tools::cargo-plugins", "development-tools::build-utils"]
license = "MIT OR Apache-2.0"
exclude = ["issue/", "*.bak", "*.backup"]

[lib]
name = "cargo_optimize"
path = "src/lib.rs"

# Temporarily disable the binary while we work on MVP
# [[bin]]
# name = "cargo-optimize"
# path = "src/bin/cargo-optimize.rs"

# Debug detection binary is for development only, not for release
# [[bin]]
# name = "debug_detection"
# path = "src/bin/debug_detection.rs"

[[bin]]
name = "cargo-test-summary"
path = "src/bin/cargo-test-summary.rs"

[features]
# Test features
long-running = []  # Enable long-running tests

[dependencies]
# Core dependencies for Phase 1.1 Configuration Management
figment = { version = "0.10", features = ["toml", "env"] }  # Layered configuration
toml_edit = "0.22"  # Preserve TOML formatting when editing
toml = "0.8"  # For serialization

# System information for hardware detection
sysinfo = "0.30"  # Comprehensive system/hardware info
num_cpus = "1.16"  # CPU detection (used by Rust itself)

# Project analysis
cargo_metadata = "0.18"  # Official Cargo project parser
guppy = "0.17"  # Facebook's dependency graph analyzer

# Utilities
which = "6.0"  # Find executables
anyhow = "1.0"  # Error handling
tracing = "0.1"  # Logging/diagnostics
tracing-subscriber = { version = "0.3", features = ["env-filter"] }  # For logging setup
serde = { version = "1.0", features = ["derive"] }  # Serialization

# For cargo-test-summary
regex = "1.10"  # For cargo-test-summary nextest output parsing

# For analysis module
serde_json = "1.0"  # JSON serialization for metadata conversion

[dev-dependencies]
# Test dependencies for comprehensive testing
tempfile = "3.0"
toml = "0.8"
serde_json = "1.0"
chrono = { version = "0.4", features = ["serde"] }
rand = "0.8"
serial_test = "3.0"

# mvp_test now uses the standard test harness for nextest compatibility
# [[test]]
# name = "mvp_test"
# harness = false

# comprehensive_test_runner now uses the standard test harness for nextest compatibility
# [[test]]
# name = "comprehensive_test_runner"
# harness = false

# quality_assurance_tests uses the standard test harness

[profile.dev]
# Fast compilation for development
codegen-units = 256
debug = true
incremental = true
lto = false
opt-level = 0

[profile.release]
# Optimized but still reasonable compile times
codegen-units = 16
lto = "thin"
opt-level = 3
