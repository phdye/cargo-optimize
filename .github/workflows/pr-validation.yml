name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check file size
      run: |
        # Fail if any file is larger than 1MB
        find . -type f -size +1M -exec echo "File {} is too large" \; -exec false {} +
    
    - name: Check for merge conflicts
      run: |
        git fetch origin main
        git merge-base --is-ancestor origin/main HEAD
    
    - name: Verify no sensitive data
      run: |
        # Check for potential secrets
        ! grep -r "PRIVATE KEY\|SECRET\|PASSWORD\|TOKEN" --exclude-dir=.git .
    
    - name: Label PR
      uses: actions/labeler@v4
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"

  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Check code complexity
      run: |
        # Install complexity checker
        cargo install --locked cargo-complexity
        cargo complexity --max 10
    
    - name: Check dependencies
      run: |
        cargo tree --duplicate
        cargo outdated --exit-code 1
    
    - name: Check license compatibility
      run: |
        cargo install cargo-license
        cargo license --avoid-build-deps --avoid-dev-deps
